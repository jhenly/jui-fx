<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <groupId>com.jhenly</groupId>
  <artifactId>jui-fx</artifactId>
  <version>0.0.3</version>

  <name>Anti-Sleep</name>
  <description>Custom JavaFX controls, containers and everything else.</description>
  <url>https://github.com/jhenly/jui-fx</url>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <mainClass>com.jhenly.juifx.Main</mainClass>
    <moduleName>com.jhenly.juifx.controls</moduleName>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
  </properties>
  
  <dependencies>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>
    
    <!-- Begin OpenJFX Dependencies -->  
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>15.0.1</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-graphics</artifactId>
      <version>15.0.1</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-base</artifactId>
      <version>15.0.1</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-fxml</artifactId>
      <version>15.0.1</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-web</artifactId>
      <version>15.0.1</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-swing</artifactId>
      <version>15.0.1</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-media</artifactId>
      <version>15.0.1</version>
      <scope>compile</scope>
    </dependency>
    <!-- End OpenJFX Dependencies -->
    
  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven 
        defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.3.0</version>
          <configuration>
            <descriptorRefs>
              <descriptorRef>jar-with-dependencies</descriptorRef>
            </descriptorRefs>
            <archive>
              <manifest>
                <mainClass>com.jhenly.juifx.Main</mainClass>
              </manifest>
            </archive>
          </configuration>
          <executions>
            <execution>
              <id>make-assembly</id> <!-- this is used for inheritance merges -->
              <phase>package</phase> <!-- bind to the packaging phase -->
              <goals>
                <goal>single</goal>
              </goals>
            </execution>
          </executions>
        </plugin>


        <!-- allows for 'clean javafx:run' -->
        <plugin>
          <groupId>org.openjfx</groupId>
          <artifactId>javafx-maven-plugin</artifactId>
          <version>0.0.5</version>
          <executions>
            <execution>
              <!-- Default configuration for running. -->
              <id>default-cli</id>
              <configuration>
          
                <!-- Used to specify absolute path to JDK's java executable,
                     i.e. "/absolute/path/to/jdk-#.#.#/bin/java", if Maven throws errors
                     because it can't find it. -->
                <executable>${java.home}/bin/java</executable>           
                <!-- used to test different 'public static void main(String[] args)' classes without changing pom.xml -->   
                <!-- via: 'clean javafx:run "-Dfoo=sample.Main"' -->
                <mainClass>com.jhenly.juifx.${foo}</mainClass>
            
              </configuration>
            </execution>
            
            <execution>
              <!-- Configuration for debugging -->
              <id>debug</id>
              <configuration>
                  <options>
                    <option>-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:8000</option>
                  </options>
                  <executable>${java.home}/bin/java</executable>
                  <mainClass>com.jhenly.juifx.${foo}</mainClass>
              </configuration>
            </execution>
            
          </executions>
        </plugin>

      </plugins>
    </pluginManagement>
  </build>
  
  <distributionManagement>
     <repository>
      <id>github</id>
      <name>GitHub jhenly Apache Maven Packages</name>
      <url>https://maven.pkg.github.com/jhenly/jui-fx</url>
    </repository>
  </distributionManagement>

  <!-- use the following to install into a user's local repository -->
  <!-- 
    mvn install:install-file -Dfile=[PATH-TO-JAR]/jui-fx-[VERS].jar -DgroupId=com.jhenly -DartifactId=jui-fx -Dversion=[VER] -Dpackaging=jar
  -->
  <!-- use the following to install into a project specific repository -->
  <!-- 
    mvn deploy:deploy-file -DgroupId=com.jhenly -DartifactId=jui-fx -Dversion=[VERS] -Durl=file:./jui-fx/ -DrepositoryId=jui-fx -DupdateReleaseInfo=true -Dfile=[FILE_PATH] -Dpackaging=jar
  -->
  <!-- for example:
    mvn deploy:deploy-file -DgroupId=com.jhenly -DartifactId=jui-fx -Dversion=0.0.2 -Durl=file:./jui-fx/ -DrepositoryId=jui-fx -DupdateReleaseInfo=true -Dfile="../jui-fx/target/jui-fx-0.0.2.jar" -Dpackaging=jar
   -->
  
</project>

